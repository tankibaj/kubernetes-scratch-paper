ingress:
  enabled: true
  hosts:
    - host: cortex.local.naim.run
      paths:
        - /
  
  
useConfigMap: true
config:
  auth_enabled: false
  
  ingester:
    lifecycler:
      ring:
        kvstore:
          store: consul
          consul:
            host: consul-server.consul.svc:8500
  
  # https://github.com/cortexproject/cortex/blob/master/docs/configuration/config-file-reference.md#limits_config
  limits:
    reject_old_samples_max_age: 12h
    max_series_per_metric: 200000
    ingestion_rate: 50000
  
  storage:
    engine: blocks
  
  # https://cortexmetrics.io/docs/configuration/configuration-file/#blocks_storage_config
  blocks_storage:
    # Backend storage to use. Supported backends are: s3, gcs, azure, swift and filesystem [local filesystem storage directory]
    backend: s3
    s3:
      bucket_name: cortex-metrics-demo
      region: eu-central-1
      endpoint: s3.eu-central-1.amazonaws.com
      insecure: true
    # Local directory to store TSDBs in the ingesters.
    tsdb:
      dir: /data/tsdb
      # TSDB blocks retention in the ingester before a block is removed. This should
      # be larger than the block_ranges_period and large enough to give
      # store-gateways and queriers enough time to discover newly uploaded blocks.
      retention_period: 6h
    bucket_store:
      sync_dir: /data/tsdb-sync
      bucket_index:
        enabled: true
  
  # https://github.com/cortexproject/cortex/blob/master/docs/configuration/config-file-reference.md#distributor_config
  distributor:
    ha_tracker:
      enable_ha_tracker: true
      kvstore:
        store: consul
        consul:
          host: consul-server.consul.svc:8500
  
  # https://github.com/cortexproject/cortex/blob/master/docs/configuration/config-file-reference.md#querier_config
  querier:
    # https://cortexmetrics.io/docs/blocks-storage/production-tips/
    query_ingesters_within: 12h5m
    query_store_after: 12h
  
  # -- Method to use for backend rule storage (configdb, azure, gcs, s3, swift, local) refer to https://cortexmetrics.io/docs/configuration/configuration-file/#ruler_config
  ruler:
    storage:
      type: s3
      s3:
        bucketnames: cortex-alerts-demo
        region: eu-central-1
        endpoint: s3.eu-central-1.amazonaws.com
        insecure: true
  
  # -- Type of backend to use to store alertmanager configs. Supported values are: "configdb", "gcs", "s3", "local". refer to: https://cortexmetrics.io/docs/configuration/configuration-file/#alertmanager_config
  alertmanager:
    enable_api: true
    storage:
      type: s3
      s3:
        bucketnames: cortex-alerts-demo
        region: eu-central-1
        endpoint: s3.eu-central-1.amazonaws.com
        insecure: true
  
  
alertmanager:
  enabled: true
  
  statefulSet:
    enabled: true
  
  persistentVolume:
    enabled: true
    size: 5Gi
  
  containerSecurityContext:
    enabled: true
    readOnlyRootFilesystem: false # allow to load/validate alertmanager rules: https://github.com/cortexproject/cortex/issues/4089
  
  
ingester:
  statefulSet:
    enabled: true
  
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 30
    targetMemoryUtilizationPercentage: 75
  
  persistentVolume:
    # https://cortexmetrics.io/docs/blocks-storage/production-tips/
    size: 20Gi
  
  
ruler:
  enabled: true
  
  
nginx:
  config:
    # -- ref: http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
    client_max_body_size: 5M
    setHeaders:
      X-Scope-OrgID: demo
  
  
store_gateway:
  persistentVolume:
    enabled: true
    size: 20Gi
  
  
compactor:
  persistentVolume:
    enabled: true
    size: 20Gi
  
  
memcached-frontend:
  enabled: true